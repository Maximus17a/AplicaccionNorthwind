@model NorthwindSalesAnalysis.Models.ViewModels.SalesTrendViewModel

@{
    ViewData["Title"] = "Tendencias de Ventas";
}

<div class="container-fluid">
    <h1 class="mb-4"><i class="bi bi-graph-up me-2"></i>@ViewData["Title"]</h1>

    <div class="row mb-4">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header bg-light">
                    <h5 class="mb-0">Filtros</h5>
                </div>
                <div class="card-body">
                    <form asp-action="SalesTrends" method="get" class="row">
                        <div class="col-md-3 mb-3">
                            <label class="form-label">Fecha inicio</label>
                            <input type="date" name="startDate" class="form-control" value="@(Model.StartDate?.ToString("yyyy-MM-dd"))" />
                        </div>
                        <div class="col-md-3 mb-3">
                            <label class="form-label">Fecha fin</label>
                            <input type="date" name="endDate" class="form-control" value="@(Model.EndDate?.ToString("yyyy-MM-dd"))" />
                        </div>
                        <div class="col-md-3 mb-3">
                            <label class="form-label">Período</label>
                            <select name="period" class="form-select">
                                <option value="monthly" selected="@(Model.Period == "monthly")">Mensual</option>
                                <option value="quarterly" selected="@(Model.Period == "quarterly")">Trimestral</option>
                            </select>
                        </div>
                        <div class="col-md-3 d-flex align-items-end mb-3">
                            <button type="submit" class="btn btn-primary me-2">
                                <i class="bi bi-search me-1"></i>Filtrar
                            </button>
                            <button type="button" class="btn btn-outline-secondary dropdown-toggle" data-bs-toggle="dropdown">
                                <i class="bi bi-download me-1"></i>Exportar
                            </button>
                            <ul class="dropdown-menu">
                                <li>
                                    <button type="button" class="dropdown-item" onclick="exportReport('pdf')">
                                        <i class="bi bi-file-pdf me-2"></i>Exportar como PDF
                                    </button>
                                </li>
                                <li>
                                    <button type="button" class="dropdown-item" onclick="exportReport('excel')">
                                        <i class="bi bi-file-excel me-2"></i>Exportar como Excel
                                    </button>
                                </li>
                            </ul>
                            <form id="exportForm" method="post" style="display:none;">
                                <input type="hidden" name="reportType" value="trends" />
                                <input type="hidden" name="startDate" value="@Model.StartDate?.ToString("yyyy-MM-dd")" />
                                <input type="hidden" name="endDate" value="@Model.EndDate?.ToString("yyyy-MM-dd")" />
                                <input type="hidden" name="period" value="@Model.Period" />
                            </form>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header bg-light">
                    <h5 class="mb-0">Evolución de Ventas</h5>
                </div>
                <div class="card-body">
                    <canvas id="salesTrendsChart" height="300"></canvas>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header bg-light">
                    <h5 class="mb-0">Detalle de Ventas por Período</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead class="table-primary">
                                <tr>
                                    <th>Período</th>
                                    <th class="text-end">Pedidos</th>
                                    <th class="text-end">Ventas Totales</th>
                                    <th class="text-end">Valor Promedio</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var trend in Model.SalesTrends)
                                {
                                    <tr>
                                        <td>@trend.Period</td>
                                        <td class="text-end">@trend.OrderCount</td>
                                        <td class="text-end">$@trend.TotalSales.ToString("N2")</td>
                                        <td class="text-end">$@trend.AverageOrderValue.ToString("N2")</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function initSalesTrendsChart(data) {
            // Ordenar los datos por fecha (ascendente)
            data.sort((a, b) => new Date(a.date) - new Date(b.date));

            // Preparar datos para el gráfico
            const labels = data.map(t => t.period);
            const totalSalesData = data.map(t => t.totalSales);
            const orderCountData = data.map(t => t.orderCount);
            const avgOrderValueData = data.map(t => t.averageOrderValue);

            // Obtener el contexto del canvas
            const ctx = document.getElementById('salesTrendsChart').getContext('2d');

            // Crear el gráfico
            const salesTrendsChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: labels,
                    datasets: [
                        {
                            label: 'Ventas Totales ($)',
                            data: totalSalesData,
                            backgroundColor: 'rgba(54, 162, 235, 0.2)',
                            borderColor: 'rgba(54, 162, 235, 1)',
                            borderWidth: 2,
                            fill: true,
                            tension: 0.1,
                            pointRadius: 4,
                            yAxisID: 'y'
                        },
                        {
                            label: 'Número de Pedidos',
                            data: orderCountData,
                            backgroundColor: 'rgba(255, 99, 132, 0.2)',
                            borderColor: 'rgba(255, 99, 132, 1)',
                            borderWidth: 2,
                            tension: 0.1,
                            pointRadius: 4,
                            yAxisID: 'y1'
                        },
                        {
                            label: 'Valor Promedio de Pedido ($)',
                            data: avgOrderValueData,
                            backgroundColor: 'rgba(75, 192, 192, 0.2)',
                            borderColor: 'rgba(75, 192, 192, 1)',
                            borderWidth: 2,
                            tension: 0.1,
                            pointRadius: 4,
                            yAxisID: 'y2'
                        }
                    ]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        title: {
                            display: true,
                            text: 'Evolución de Ventas a lo Largo del Tiempo',
                            font: {
                                size: 16
                            }
                        },
                        legend: {
                            position: 'top',
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    let label = context.dataset.label || '';
                                    if (label) {
                                        label += ': ';
                                    }
                                    if (context.datasetIndex === 0 || context.datasetIndex === 2) {
                                        label += '$' + context.raw.toFixed(2);
                                    } else {
                                        label += context.raw;
                                    }
                                    return label;
                                }
                            }
                        }
                    },
                    scales: {
                        x: {
                            title: {
                                display: true,
                                text: 'Período'
                            }
                        },
                        y: {
                            type: 'linear',
                            display: true,
                            position: 'left',
                            title: {
                                display: true,
                                text: 'Ventas Totales ($)'
                            }
                        },
                        y1: {
                            type: 'linear',
                            display: true,
                            position: 'right',
                            grid: {
                                drawOnChartArea: false
                            },
                            title: {
                                display: true,
                                text: 'Número de Pedidos'
                            }
                        },
                        y2: {
                            type: 'linear',
                            display: false,
                            title: {
                                display: true,
                                text: 'Valor Promedio ($)'
                            }
                        }
                    }
                }
            });
        }

        // Función para exportar informe
        function exportReport(format) {
            const form = document.getElementById('exportForm');
            if (format === 'pdf') {
                form.action = '@Url.Action("ExportToPdf", "Reports")';
            } else {
                form.action = '@Url.Action("ExportToExcel", "Reports")';
            }
            form.submit();
        }

        // Inicializar el gráfico con los datos del modelo
        document.addEventListener('DOMContentLoaded', function() {
            const trendsData = @Html.Raw(Json.Serialize(Model.SalesTrends));
            initSalesTrendsChart(trendsData);
        });
    </script>
}